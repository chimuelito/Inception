version: "3.9"

services:

    nginx:
        container_name: nginx
        build: ./requirements/nginx
        depends_on:
            - wordpress-php
        ports:
            - 443:443
        volumes:
            - wp_volume:/var/www/html/wordpress
        networks:
            - inception_network
        restart: always

    wordpress-php:
        env_file: .env
        container_name: wp_php
        build: ./requirements/wordpress
        depends_on:
            - mariadb
        volumes:
            - wp_volume:/var/www/html/wordpress
        networks:
            - inception_network
        restart: always

    # Method to have sensitive data not accessible inside running container. But accessible
    # anyway with 'docker history [--no-trunc] <image id>'
    mariadb:
        container_name: mariadb
        build:
            context: ./requirements/mariadb/
            dockerfile: Dockerfile
            args:
                WP_DB_HOST: ${WP_DB_HOST}
                WP_DB_NAME: ${WP_DB_NAME}
                WP_DB_USER: ${WP_DB_USER}
                MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
                MYSQL_PASSWORD: ${MYSQL_PASSWORD}

        volumes:
            - mariadb_volume:/var/lib/mysql
        networks:
            - inception_network
        restart: always

volumes:
    wp_volume:
        driver: local
        driver_opts:
            type: 'none'
            o: 'bind'
            device: ${PWD}/wp_volume

    mariadb_volume:
         driver: local
         driver_opts:
            type: 'none'
            o: 'bind'
            device: ${PWD}/mariadb_volume

networks:
    inception_network:
        name: inception_network
        driver: bridge
